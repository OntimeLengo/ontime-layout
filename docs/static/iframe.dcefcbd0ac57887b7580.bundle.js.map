{"version":3,"file":"static/iframe.dcefcbd0ac57887b7580.bundle.js","sources":["webpack:///./src/store/index.js"],"sourcesContent":["const data = {\n  'function': new Map(),\n  'class': new Map(),\n  'component': new Map(),\n  'object': new Map(),\n  'exec': new Map()\n};\n\nconst types = Object.keys(data);\n\nfunction getByType(type) {\n  if (data[type]) {\n    return data[type];\n  } else {\n    throw new Error('store/getByType: Unknown type ' + type);\n  }\n}\n\nconst store = {\n\n  has: function(type, name) {\n    return getByType(type).has(name);\n  },\n\n  get: function(type, name) {\n    if (this.has(type, name)) {\n      return getByType(type).get(name);\n    } else {\n      throw new Error('store/get: ' + type + '/' + name + ' has not found');\n    }\n  },\n\n  set: function(type, name, value) {\n    const store = getByType(type);\n    \n    if (this.has(type, name)) {\n      throw new Error('store/set: ' + type + '\\'s store already contains ' + name);\n    }\n\n    store.set(name, value);\n  },\n\n  delete: function(type, name) {\n    if (!this.has(type, name)) {\n      throw new Error('store/delete: ' + type + '/' + name + ' has not found');\n    }\n\n    getByType(type).delete(name);\n  }\n\n};\n\nexport default store;\n\nexport {\n  types\n};\n"],"mappings":"AAAA","sourceRoot":""}